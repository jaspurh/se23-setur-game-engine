# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven  # Name of the workflow

on:  # Event triggers for the workflow
  push:  # Triggers when code is pushed to the specified branches
    branches: [ "main" ]
  pull_request:  # Triggers when a pull request is opened or updated
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest  # Specifies the operating system to run the job on

    steps:  # List of steps to perform
    - uses: actions/checkout@v3  # Checks out the code repository

    - name: Set up JDK
      uses: actions/setup-java@v3  # Uses a pre-built action to set up Java
      with:
        java-version: '21'  # Specifies the Java version to set up
        distribution: 'temurin'  # Specifies the distribution of Java to use (Temurin is an OpenJDK distribution)
        cache: maven  # Caches Maven dependencies to improve performance

    - name: Build with Maven
      run: mvn -B package --file pom.xml  # Executes the "mvn" command with specified options

    - name: Run Tests with Maven
      run: mvn test --file pom.xml  # Executes the "mvn" command to run tests

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6  # Uses a third-party action to update dependency graph
